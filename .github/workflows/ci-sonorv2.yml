name: Build release candidate

on:
  push:
    branches:
      - sonorV2

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.version.outputs.pe-version }}
      tag-already-exists: ${{ steps.checkTag.outputs.exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: echo "pe-version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - name: Print version
        run: echo ${{ steps.version.outputs.pe-version }}

      - uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: ${{ steps.version.outputs.pe-version }}

      - if: ${{ steps.checkTag.outputs.exists == 'true' }}
        name: "Skip release"
        run: echo "Nothing to tag/release, the release ${{ steps.version.outputs.pe-version }} already exists"

  create-release:
    needs: check-version
    runs-on: ubuntu-latest
    if: ${{ needs.check-version.outputs.tag-already-exists == 'false' }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Get previous tag
        id: previousTag
        run: echo "previousTag=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | grep '^[0-9]\+\.[0-9]\+\.[0-9]\+$' | tail -1)" >> $GITHUB_OUTPUT

      - name: Create release note
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          fromTag: ${{ github.sha }}
          toTag: ${{ steps.previousTag.outputs.previousTag}}
          token: ${{ secrets.GITHUB_TOKEN }}
          writeToFile: false

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-version.outputs.release-version }}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: ${{ needs.check-version.outputs.release-version }}
          body: ${{steps.changelog.outputs.changes}}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs:
      - check-version
      - create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: |
            inseefr/platine-management:${{  needs.check-version.outputs.release-version }}-beta
            inseefr/platine-management:latest